# [[plugins]]
# repo = '~/repos/github.com/TamDik/vim-tags'
# repo = 'TamDik/vim-tags'


[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
  colorscheme iceberg
'''


[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  set laststatus=2
  let g:lightline = {
    \ 'colorscheme': 'seoul256',
    \ 'active': {
    \   'left':  [['mode'],
    \             ['filename'],
    \            ],
    \   'right': [['filetype'],
    \             ['fileencoding'],
    \             ['aleactive', 'fileformat'],
    \            ]
    \ },
    \ 'inactive': {
    \   'left':  [['filename']],
    \   'right': []
    \ },
    \ 'component_function': {
    \   'aleactive': 'LLAleActive'
    \ },
    \ }
  function LLAleActive()
    if !g:ale_enabled 
      return ''
    endif

    let l:counts = ale#statusline#Count(bufnr(''))
    let l:num_errors = l:counts.error + l:counts.style_error
    let l:num_warnings = l:counts.total - l:num_errors
    return printf('E%dW%d', l:num_errors, l:num_warnings)
  endfunction
'''


[[plugins]]
repo = 'tpope/vim-surround'


[[plugins]]
repo = 'tpope/vim-repeat'


[[plugins]]
repo = 'tpope/vim-commentary'


[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  nnoremap <leader>ff :<C-u>Files<CR>
  nnoremap <leader>fb :<C-u>Buffers<CR>
  nnoremap <leader>ft :<C-u>Tags<CR>
  nnoremap <leader>fh :<C-u>History<CR>
'''


[[plugins]]
repo = 'junegunn/fzf'
merged = '0'
 

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
'''


[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = '''!has('nvim')'''
hook_add = '''
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_smart_case = 1
  let g:neocomplete#enable_underbar_completion = 1
  let g:neocomplete#enable_camel_case_completion = 1
  let g:neocomplete#enable_auto_close_preview = 1
'''


[[plugins]]
repo = 'SirVer/ultisnips'
if = '''!has('nvim')'''
hook_add = '''
  let g:UltiSnipsExpandTrigger = "<tab>"
  let g:UltiSnipsJumpForwardTrigger  = "<c-b>"
  let g:UltiSnipsJumpBackwardTrigger = "<c-z>"
  let g:UltiSnipsEditSplit = "vertical"
'''
