[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
  colorscheme iceberg
'''


[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
  set laststatus=2
  let g:lightline = {
    \ 'colorscheme': 'seoul256',
    \ 'active': {
    \   'left':  [['mode'],
    \             ['filename'],
    \            ],
    \   'right': [['filetype'],
    \             ['fileencoding'],
    \             ['aleactive', 'fileformat'],
    \            ]
    \ },
    \ 'inactive': {
    \   'left':  [['filename']],
    \   'right': []
    \ },
    \ 'component_function': {
    \   'aleactive': 'LLAleActive'
    \ },
    \ }
  function LLAleActive()
    if !g:ale_enabled 
      return ''
    endif

    let l:counts = ale#statusline#Count(bufnr(''))
    let l:num_errors = l:counts.error + l:counts.style_error
    let l:num_warnings = l:counts.total - l:num_errors
    return printf('E%dW%d', l:num_errors, l:num_warnings)
  endfunction
'''


[[plugins]]
repo = 'tpope/vim-surround'


[[plugins]]
repo = 'tpope/vim-repeat'


[[plugins]]
repo = 'tpope/vim-commentary'


[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  nnoremap <silent> <leader>ff :<C-u>Files<CR>
  nnoremap <silent> <leader>fb :<C-u>Buffers<CR>
  nnoremap <silent> <leader>fl :<C-u>Lines<CR>
  "nnoremap <silent> <leader>fr :<C-u>Rg<CR>
  nnoremap <silent> <leader>ft :<C-u>Tags<CR>
  nnoremap <silent> <leader>fh :<C-u>History<CR>
  let g:fzf_commits_log_options = '--graph --decorate --pretty=oneline --all --abbrev-commit'

  imap <c-x><c-k> <plug>(fzf-complete-word)
  imap <c-x><c-f> <plug>(fzf-complete-path)
  imap <c-x><c-l> <plug>(fzf-complete-line)
'''


[[plugins]]
repo = 'junegunn/fzf'
merged = '0'
hook_add = '''
  let $FZF_DEFAULT_OPTS = '--layout=reverse --border --inline-info '
  let $FZF_DEFAULT_OPTS .= '--color=fg:#c6c8d1,bg:#161821,hl:#6b7089'
  "let $FZF_DEFAULT_OPTS .= ',fg+:#c6c8d1,bg+:#1e2132,hl+:#84a0c6'
  "let $FZF_DEFAULT_OPTS .= ',info:#b4be82,prompt:#84a0c6,pointer:#84a0c6'
  "let $FZF_DEFAULT_OPTS .= ',marker:#84a0c6,spinner:#84a0c6,header:#6b7089'
  if has('nvim')
    let s:fzf_win = -1
    function! FZFWindow()
      setlocal ambiwidth=single  " To prevent a preview window from being disturbed

      let l:width = float2nr(&columns * 0.9)
      let l:height = float2nr(&lines * 0.8)
      let l:opts = {
         \ 'relative': 'win',
         \ 'row': (&lines - l:height) / 2,
         \ 'col': (&columns - l:width) / 2,
         \ 'width': l:width,
         \ 'height': l:height,
         \ 'style': 'minimal'
         \}
      let s:fzf_win = nvim_open_win(nvim_create_buf(v:false, v:true), v:true, l:opts)
      call setwinvar(s:fzf_win, '&winhighlight', 'NormalFloat:TabLine')
    endfunction

    if &ambiwidth == 'double'
      augroup FZFAmbi
        autocmd!
        autocmd BufWinLeave * if win_getid() == s:fzf_win | setlocal ambiwidth=double | endif
      augroup END
    endif

    let g:fzf_layout = {'window': 'call FZFWindow()'}
  endif
'''


[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
'''


[[plugins]]
repo = 'Shougo/neocomplete.vim'
if = '''!has('nvim')'''
hook_add = '''
  let g:neocomplete#enable_at_startup = 1
  let g:neocomplete#enable_smart_case = 1
  let g:neocomplete#enable_underbar_completion = 1
  let g:neocomplete#enable_camel_case_completion = 1
  let g:neocomplete#enable_auto_close_preview = 1
'''


[[plugins]]
repo = 'Shougo/deoplete.nvim'
if = '''has('nvim')'''
hook_add = '''
  let g:deoplete#enable_at_startup = 1
'''


[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
  let g:UltiSnipsExpandTrigger="<Tab>"
  let g:UltiSnipsJumpForwardTrigger="<Tab>"
  let g:UltiSnipsJumpBackwardTrigger="<S-Tab>"
'''


[[plugins]]
repo = 'honza/vim-snippets'


[[plugins]]
repo = 'mhinz/vim-startify'
hook_add = '''
  let g:startify_files_number = 8
  let g:startify_lists = [
    \ { 'type': 'files',     'header': ['   Recent Files']},
    \ { 'type': 'dir',       'header': ['   Current Directory -- ' . getcwd()] },
    \ { 'type': 'sessions',  'header': ['   Sessions']},
    \ { 'type': 'bookmarks', 'header': ['   Bookmarks']},
    \ { 'type': 'commands',  'header': ['   Commands']},
    \ ]
  let g:startify_bookmarks = []

  let s:repos = split(glob('~/repos/github.com/TamDik/*'), '\n')
  if exists('*HomeToTilde')
    let s:repos = map(s:repos, 'HomeToTilde(v:val)')
  endif
  let g:startify_bookmarks += s:repos

  let g:startify_custom_header=''
  let g:startify_change_to_vcs_root=1
'''


[[plugins]]
repo = "cespare/vim-toml"
