[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
  function! s:defx_my_settings() abort
    nnoremap <silent><buffer><expr> <CR>
    \ defx#do_action('open')
    nnoremap <silent><buffer><expr> c
    \ defx#do_action('copy')
    nnoremap <silent><buffer><expr> m
    \ defx#do_action('move')
    nnoremap <silent><buffer><expr> p
    \ defx#do_action('paste')
    nnoremap <silent><buffer><expr> l
    \ defx#do_action('open')
    nnoremap <silent><buffer><expr> E
    \ defx#do_action('open', 'vsplit')
    nnoremap <silent><buffer><expr> P
    \ defx#do_action('preview')
    nnoremap <silent><buffer><expr> o
    \ defx#do_action('open_tree', 'toggle')
    nnoremap <silent><buffer><expr> K
    \ defx#do_action('new_directory')
    nnoremap <silent><buffer><expr> N
    \ defx#do_action('new_file')
    nnoremap <silent><buffer><expr> M
    \ defx#do_action('new_multiple_files')
    nnoremap <silent><buffer><expr> C
    \ defx#do_action('toggle_columns',
    \                'mark:indent:icon:filename:type:size:time')
    nnoremap <silent><buffer><expr> S
    \ defx#do_action('toggle_sort', 'time')
    nnoremap <silent><buffer><expr> d
    \ defx#do_action('remove')
    nnoremap <silent><buffer><expr> r
    \ defx#do_action('rename')
    nnoremap <silent><buffer><expr> !
    \ defx#do_action('execute_command')
    nnoremap <silent><buffer><expr> x
    \ defx#do_action('execute_system')
    nnoremap <silent><buffer><expr> yy
    \ defx#do_action('yank_path')
    nnoremap <silent><buffer><expr> .
    \ defx#do_action('toggle_ignored_files')
    nnoremap <silent><buffer><expr> ;
    \ defx#do_action('repeat')
    nnoremap <silent><buffer><expr> h
    \ defx#do_action('cd', ['..'])
    nnoremap <silent><buffer><expr> ~
    \ defx#do_action('cd')
    nnoremap <silent><buffer><expr> q
    \ defx#do_action('quit')
    nnoremap <silent><buffer><expr> <Space>
    \ defx#do_action('toggle_select') . 'j'
    nnoremap <silent><buffer><expr> *
    \ defx#do_action('toggle_select_all')
    nnoremap <silent><buffer><expr> j
    \ line('.') == line('$') ? 'gg' : 'j'
    nnoremap <silent><buffer><expr> k
    \ line('.') == 1 ? 'G' : 'k'
    nnoremap <silent><buffer><expr> <C-l>
    \ defx#do_action('redraw')
    nnoremap <silent><buffer><expr> <C-g>
    \ defx#do_action('print')
    nnoremap <silent><buffer><expr> cd
    \ defx#do_action('change_vim_cwd')
  endfunction

  function! s:open_defx_if_directory()
    try
      let l:full_path = expand(expand('%:p'))
      if isdirectory(l:full_path)
        execute "Defx `expand('%:p')` -listed | bd " . expand('%:r')
      endif
    catch
    endtry
  endfunction

  augroup DefxConfig
    autocmd!
    autocmd FileType defx call s:defx_my_settings()
    autocmd BufEnter * call s:open_defx_if_directory()
  augroup END

  nnoremap <silent> <leader>d :<C-u>Defx -listed -resume<CR>
'''


[[plugins]]
repo = 'junegunn/goyo.vim'
hook_add = '''
  let g:goyo_width = 80
  let g:goyo_height = '100%'
  nnoremap <silent> <leader>g :Goyo<CR>
  augroup Goyo
    autocmd!
    autocmd User GoyoEnter :nnoremap j gj
    autocmd User GoyoEnter :nnoremap k gk
    autocmd User GoyoEnter :nnoremap J gJ
    autocmd User GoyoLeave :nnoremap j j
    autocmd User GoyoLeave :nnoremap k k
    autocmd User GoyoLeave :nnoremap J J
  augroup END
'''


[[plugins]]
repo = 'dense-analysis/ale'
hook_add = '''
  let g:ale_enabled = 1

  let g:ale_lint_on_enter = 1
  let g:ale_lint_on_filetype_changed = 1
  let g:ale_lint_on_insert_leave = 1
  let g:ale_lint_on_save = 1
  let g:ale_lint_on_text_changed = 'normal'

  let g:ale_linters_explicit = 0
  let g:ale_linters = {
    \ 'python':     ['pylint'],
    \ 'java':       ['javac'],
    \}
  nmap <leader>ak <Plug>(ale_previous_wrap)
  nmap <leader>aj <Plug>(ale_next_wrap)
  nnoremap <silent> <leader>aa :<C-u>ALEToggle<CR>

  if !has('nvim')
    let g:ale_sign_error = ''
    let g:ale_sign_warning = ''
  endif
  let g:ale_echo_msg_error_str = 'E'
  let g:ale_echo_msg_warning_str = 'W'
  let g:ale_echo_msg_format = '[%linter%] %s [%severity%]'

  if isdirectory('src')
    let g:ale_java_javac_classpath = getcwd() . '/src'
  endif

  augroup ALEColor
    autocmd!
    autocmd ColorScheme * highlight ALEErrorSign   ctermfg=203 ctermbg=NONE guibg=NONE
    autocmd ColorScheme * highlight ALEWarningSign ctermfg=216 ctermbg=NONE guibg=NONE
  augroup END
'''
