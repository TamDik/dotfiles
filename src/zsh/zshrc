export LANG=en_US.UTF-8
setopt no_beep
setopt ignoreeof
setopt interactivecomments
setopt correct
# disable r


# key bind
export KEYTIMEOUT=20

bindkey -e
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
bindkey "^p" history-beginning-search-backward-end
bindkey "^n" history-beginning-search-forward-end
bindkey "^u" backward-kill-line


# prompt
function _set_ps_mode {
  local mode color1 color2 br sp
  mode=$1
  case $mode in
    insert)
      color1=110
      color2=248
      ;;
    command)
      color1=180
      color2=180
      ;;
  esac
  br=$'\n'
  sp=' '
  PS1=$br%~$br%F{$color1}$%f$sp
  PS2=%F{$color2}$%f$sp
}

setopt prompt_subst
autoload -Uz vcs_info
_set_ps_mode insert
precmd() {
  vcs_info
}

function zle-line-init zle-keymap-select {
  case $KEYMAP in
    vicmd)
      _set_ps_mode command;;
    viins|main)
      _set_ps_mode insert;;
  esac
  zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "%F{150}"
zstyle ':vcs_info:git:*' unstagedstr "%F{210}"
zstyle ':vcs_info:git:*' formats " %c%u%b"
zstyle ':vcs_info:*' formats " %s(%b)"

export RPROMPT='%1(j.%j-job.)${vcs_info_msg_0_}'


# zplug
export ZPLUG_HOME=~/repos/github.com/zplug/zplug
export ZPLUG_CACHE_DIR=~/.cache/zplug
export ZPLUG_REPOS=~/repos/zplug
if [ ! -d $ZPLUG_HOME ]; then
  curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
fi
source $ZPLUG_HOME/init.zsh
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "momo-lab/zsh-abbrev-alias"
# now installed with ``brew''
# zplug "universal-ctags/ctags"
zplug "junegunn/fzf-bin", as:command, from:gh-r, rename-to:fzf
zplug "junegunn/fzf", as:command, use:bin/fzf-tmux
if ! zplug check; then
  zplug install
fi
zplug load


# history
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt share_history
setopt hist_no_store
setopt hist_reduce_blanks
setopt hist_verify
export HISTFILE=~/.zsh_history
export HISTSIZE=10000
export SAVEHIST=10000
HISTIGNORE="exit:rm *"

zshaddhistory() {
  local line pattern patterns
  line=${1%%$'\n'}
  patterns=($(echo ${HISTIGNORE} | sed 's/ /[space]/g' | sed 's/:/ /g'));
  for pattern in $patterns; do
    pattern=$(echo $pattern | sed 's/\[space\]/ /g')
    if [[ $line == $~pattern ]]; then
      return 1
    fi
  done
  return 0
}


# cd
setopt auto_cd
setopt auto_pushd
setopt pushd_ignore_dups
alias dirs='dirs -v'
cdpath=(
  $cdpath
)

chpwd() {
  if [ `uname` = 'Darwin' ]; then
    ls -aGF
  elif [ `uname` = 'Linux' ]; then
    ls -aF --color=always
  fi
}


# completion
setopt list_types
setopt complete_in_word
autoload -Uz compinit && compinit -d ~/.zcompdump
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}'
zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors $LS_COLORS


# sticky shift
function _sticky_shift () {
  local char
  typeset -A sticky_table
  sticky_table=(
    '`' '~' '1' '!' '2' '@' '3' '#' '4' '$' '5' '%' '6' '^' '7' '&' '8' '*' '9' '(' '0' ')' '-' '_' '=' '+'
    '[' '{' ']' '}' '\' '|' ';' ':' "'" '"' ',' '<' '.' '>' '/' '?'
    'a' 'A' 'b' 'B' 'c' 'C' 'd' 'D' 'e' 'E' 'f' 'F' 'g' 'G' 'h' 'H' 'i' 'I' 'j' 'J' 'k' 'K' 'l' 'L' 'm' 'M'
    'n' 'N' 'o' 'O' 'p' 'P' 'q' 'Q' 'r' 'R' 's' 'S' 't' 'T' 'u' 'U' 'v' 'V' 'w' 'W' 'x' 'X' 'y' 'Y' 'z' 'Z'
    ' ' ';'
  )
  read -k 1 -t 0.5 char
  if [[ -n "${sticky_table[$char]}" ]]; then
    char="${sticky_table[$char]}"
  else
    char=';'
  fi
  LBUFFER="$LBUFFER$char"
}
zle -N _sticky_shift
bindkey ';' _sticky_shift


# edit-and-execute-command
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey "\C-x\C-e" edit-command-line


# zsh-users/zsh-syntax-highlighting
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)


# python
[ -f ${DOTFILES}/python/pythonrc.zsh ] && source ${DOTFILES}/python/pythonrc.zsh

# fzf
[ -f ${DOTFILES}/zsh/fzfrc.zsh ] && source ${DOTFILES}/zsh/fzfrc.zsh

# alias
[ -f ${DOTFILES}/zsh/aliasrc.zsh ] && source ${DOTFILES}/zsh/aliasrc.zsh


# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/daiki/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/daiki/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/daiki/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/daiki/google-cloud-sdk/completion.zsh.inc'; fi
