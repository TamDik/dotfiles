export LANG=en_US.UTF-8
setopt no_beep
setopt ignoreeof
setopt interactivecomments
setopt correct
# disable r


# key bind
export KEYTIMEOUT=20
bindkey -v
bindkey -M viins 'jj' vi-cmd-mode

zmodload zsh/complist
bindkey -M menuselect 'H' vi-backward-char
bindkey -M menuselect 'K' vi-up-line-or-history
bindkey -M menuselect 'L' vi-forward-char
bindkey -M menuselect 'J' vi-down-line-or-history


# prompt
function _set_ps_mode {
  local mode color1 color2 br sp
  mode=$1
  case $mode in
    insert)
      color1=110
      color2=248
      ;;
    command)
      color1=180
      color2=180
      ;;
  esac
  br=$'\n'
  sp=' '
  PS1=$br%~$br%F{$color1}❱%f$sp
  PS2=%F{$color2}❱%f$sp
}

setopt prompt_subst
autoload -Uz vcs_info
_set_ps_mode insert
precmd() {
  vcs_info
}

function zle-line-init zle-keymap-select {
  case $KEYMAP in
    vicmd)
      _set_ps_mode command;;
    viins|main)
      _set_ps_mode insert;;
  esac
  zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

RF=0
RK=102
UNSTAGEDCOLOR=210
STAGEDCOLOR=150
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "%F{${STAGEDCOLOR}}%K{${STAGEDCOLOR}}"
zstyle ':vcs_info:git:*' unstagedstr "%F{${UNSTAGEDCOLOR}}%K{${UNSTAGEDCOLOR}}"
zstyle ':vcs_info:*' formats "%F{${RK}}%f%K{${RK}}%F{${RF}} %s  %b "
zstyle ':vcs_info:git:*' formats "%F{${RK}}%c%u%k%f%K{${RK}}%c%u%F{${RF}}  %b "

JOBSCOLOR=3
JOBSPS="%1(j.%F{${JOBSCOLOR}}%K{${JOBSCOLOR}}%F{${RF}}%j Job%2(j.s.) .)"
export RPROMPT='${vcs_info_msg_0_}'${JOBSPS}'%k%f'
unset RK RF UNSTAGEDCOLOR STAGEDCOLOR JOBSPS JOBSCOLOR


# zplug
export ZPLUG_HOME=~/repos/github.com/zplug/zplug
export ZPLUG_CACHE_DIR=~/.cache/zplug
export ZPLUG_REPOS=~/repos/zplug
if [ ! -d $ZPLUG_HOME ]; then
  curl -sL --proto-redir -all,https https://raw.githubusercontent.com/zplug/installer/master/installer.zsh | zsh
fi
source $ZPLUG_HOME/init.zsh
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "momo-lab/zsh-abbrev-alias"
# now installed with ``brew''
# zplug "universal-ctags/ctags"
zplug "junegunn/fzf-bin", as:command, from:gh-r, rename-to:fzf
zplug "junegunn/fzf", as:command, use:bin/fzf-tmux
if ! zplug check; then
  zplug install
fi
zplug load


# history
setopt hist_ignore_dups
setopt hist_ignore_all_dups
setopt share_history
setopt hist_no_store
setopt hist_reduce_blanks
setopt hist_verify
export HISTFILE=${DOTFILES}/zsh/history
export HISTSIZE=10000
export SAVEHIST=10000
HISTIGNORE="exit:rm *"

zshaddhistory() {
  local line pattern patterns
  line=${1%%$'\n'}
  patterns=($(echo ${HISTIGNORE} | sed 's/ /[space]/g' | sed 's/:/ /g'));
  for pattern in $patterns; do
    pattern=$(echo $pattern | sed 's/\[space\]/ /g')
    if [[ $line == $~pattern ]]; then
      return 1
    fi
  done
  return 0
}


# cd
setopt auto_cd
setopt auto_pushd
setopt pushd_ignore_dups
alias dirs='dirs -v'
cdpath=(
  $cdpath
)

chpwd() {
  ls -aGF
}


# completion
setopt list_types
setopt complete_in_word
autoload -Uz compinit && compinit -d ${DOTFILES}/zsh/zcompdump
zstyle ':completion:*' matcher-list 'm:{[:lower:]}={[:upper:]}'
zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors $LS_COLORS


# zsh-users/zsh-syntax-highlighting
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)


# python
[ -f ${DOTFILES}/python/pythonrc.zsh ] && source ${DOTFILES}/python/pythonrc.zsh

# fzf
[ -f ${DOTFILES}/zsh/fzfrc.zsh ] && source ${DOTFILES}/zsh/fzfrc.zsh

# alias
[ -f ${DOTFILES}/zsh/aliasrc.zsh ] && source ${DOTFILES}/zsh/aliasrc.zsh
